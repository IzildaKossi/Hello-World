#BlueJ class context
comment0.params=
comment0.target=Containers()
comment1.params=
comment1.target=java.lang.String\ toString()
comment1.text=met\u00F3do\ para\ mostrar\ informa\u00E7\u00F5es\ do\ contentor
comment10.params=
comment10.target=Packs[]\ getPacks()
comment11.params=packs
comment11.target=void\ setPacks(Packs[])
comment12.params=
comment12.target=int\ getNumber()
comment13.params=number
comment13.target=void\ setNumber(int)
comment14.params=
comment14.target=int\ getQuantityPacks()
comment15.params=quantityPacks
comment15.target=void\ setQuantityPacks(int)
comment16.params=
comment16.target=float\ getWeight()
comment17.params=weight
comment17.target=void\ setWeight(int)
comment18.params=
comment18.target=float\ getVolume()
comment19.params=volume
comment19.target=void\ setVolume(float)
comment2.params=
comment2.target=boolean\ isFull()
comment2.text=met\u00F3do\ para\ verificar\ se\ o\ contentor\ est\u00E1\ cheio
comment3.params=
comment3.target=boolean\ isEmpty()
comment3.text=met\u00F3do\ para\ verificar\ se\ o\ contentor\ est\u00E1\ vazio
comment4.params=newVolume
comment4.target=float\ convertVolume(float)
comment4.text=met\u00F3do\ para\ converter\ cm3\ em\ m3
comment5.params=pack
comment5.target=boolean\ addPack(Packs)
comment6.params=numberPack
comment6.target=int\ indexOfPackByID(int)
comment7.params=numberPack
comment7.target=Packs\ emptyContainer(int)
comment7.text=met\u00F3do\ para\ descarregar\ pack
comment8.params=
comment8.target=float\ weightFree()
comment8.text=met\u00F3do\ para\ obter\ o\ peso\ disponivel
comment9.params=
comment9.target=float\ volumeFree()
comment9.text=met\u00F3do\ para\ obter\ o\ espa\u00E7o\ livre
numComments=20
